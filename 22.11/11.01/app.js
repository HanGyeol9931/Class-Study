// typeScript란
// javaScript에서 타입 설정이 추가된 언어라고 보시면 된다
// javaScript에서 타입이 확장된 언어
// typeScript는 javaScript의 상위 집합 슈퍼셋으로서 대형 프로젝트를 진행할때
// 어느정도 약점 오류를 잡는데 좋다.
// C++, C# 같이 객체지향 프로그래밍을 지원하는데
// typeScript는 객체지향 프로그래밍에 특화된 프로그래밍 패턴을 지원하는데
// 현재는 함수형 프로그래밍이 좀 대세라서 타입검사나 추론등의 기능을 사용만 할꺼다

// typeScript를 쓰면 javaScript로 작업할때 보다 개발에서 생긴는 에러를 사전에 방지할 수 있고
// javaScript의 코드의 품질과 개발 생산성을 높일 수 있다.

// 코드의 완성 가이드
// javaScript는 타입이 정해져 있지 않아서 자동완성이 미리 뜨지 않아 일일 타이핑 해야한다.
// tpyeScript는 타입을 정해놔서 미리 자동 완성이 뜨기 때문에 빠르고 정확하게 작업을 할수 있다.

// typeScript는 에러를 사전에 방지하는데 javaScript는 코드를 실행시켜야지 에러르 확인 할 수 있고
// typeScript는 작성한 코드가 문제가 있으면 실행시키기전부터 바로바로 확인해서 문제를 해결할 수있다.

// typeScript는 프로그래밍 언어이고 typeScript의 컴파일은 그냥 typeScript 코드를 javaScript코드로 바꿔주는 것이다.
// javaScript코드로 바꿔주는 이유는 브라우저가 이해할 수 있는 언어는 typeScript가 아니라 javaScript로 작성된 코드이기 때문이다.

// 타입 스크립트를 설치해보자
// 설치 명령어

// ---------------------------------------------
// sudo npm install -g typescript
// 맥에서 이걸로 설치면 된다.
// ---------------------------------------------

// 설치확인
// ---------------------------------------------
// tsc --version
// ---------------------------------------------

// tsconfig.json 생성 명령어

// ---------------------------------------------
// tsc --init
// ---------------------------------------------

// tsconfig.json은 typeScript의 설정파일 typeScript의 설정값을 조장 할수 있다.

// typeScript의 변수 타입 지정

// 변수명 : 타입 = 초기값

// 자바스크립트는 변수명 = 초기값 이었는데.

// ts-node라는 typeScript 실행기를 사용해서 개발 환경에서 typeScript로 작성된 파일을 실행 시켜 볼수 있다.

// 설치 명령어

// --------------------------------------------
// npm install -D typescript ts-node @types/node
// --------------------------------------------